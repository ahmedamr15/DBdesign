i: "MATCH ()<-[:REPORTS_TO]-(employee:Employee) where not ()-[:REPORTS_TO]->(employee) return employee.firstName+" "+employee.lastName AS Employees ;"

//----------------------------------------------------------------------------------------\\

ii:

//----------------------------------------------------------------------------------------\\

iii:"match (employee:Employee)-[:SOLD]->(order:Order)-[:PRODUCT]->(product:Product) with employee,count(product) as productCount,collect(product) AS products return employee,products,productCount;"

//----------------------------------------------------------------------------------------\\

iv: "MATCH (employee:Employee)-[:REPORTS_TO]->(manager:Employee)-[:REPORTS_TO]->(higherManager:Employee) MERGE (employee)-[pu:REPORTS_TO]->(higherManager);"

//----------------------------------------------------------------------------------------\\

// this deletes products and the relation ship ofcourse , this one what i think they want
v: "match ()-[:REPORTS_TO]->(e:Employee)-[:SOLD]->(order:Order)-[:PRODUCT]-> (product:Product) OPTIONAL MATCH  (product)-[r]-() delete r,product ;"
// or if he wants only to delete the relation ship!
v: "match ()-[:REPORTS_TO]->(e:Employee)-[:SOLD]->(order:Order)-[r:PRODUCT]-> (product:Product)  delete r;"

//----------------------------------------------------------------------------------------\\

vi:match (shipper:Shipper)
with collect(shipper) as shippers
match (customer:Customer)
where all (shipper in shippers where (customer)-[:PURCHASED]->(:Order)-[:SHIP_VIA]->(shipper))
return customer;

//----------------------------------------------------------------------------------------\\

vii: "match (product:Product)<-[:PRODUCT]-(order:Order) with collect(order) AS order ,product AS products return products, order;"

//----------------------------------------------------------------------------------------\\

